# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import inventory_pb2 as inventory__pb2


class InventoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchAllProducts = channel.unary_unary(
                '/InventoryService/SearchAllProducts',
                request_serializer=inventory__pb2.Empty.SerializeToString,
                response_deserializer=inventory__pb2.ProductsResponse.FromString,
                )
        self.SearchProductByID = channel.unary_unary(
                '/InventoryService/SearchProductByID',
                request_serializer=inventory__pb2.Payload.SerializeToString,
                response_deserializer=inventory__pb2.ProductResponse.FromString,
                )
        self.AddProduct = channel.unary_unary(
                '/InventoryService/AddProduct',
                request_serializer=inventory__pb2.ProductRequest.SerializeToString,
                response_deserializer=inventory__pb2.ProductResponse.FromString,
                )
        self.UpdateProduct = channel.unary_unary(
                '/InventoryService/UpdateProduct',
                request_serializer=inventory__pb2.ProductRequest.SerializeToString,
                response_deserializer=inventory__pb2.ProductResponse.FromString,
                )
        self.DeleteProduct = channel.unary_unary(
                '/InventoryService/DeleteProduct',
                request_serializer=inventory__pb2.Payload.SerializeToString,
                response_deserializer=inventory__pb2.Empty.FromString,
                )


class InventoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchAllProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchProductByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchAllProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchAllProducts,
                    request_deserializer=inventory__pb2.Empty.FromString,
                    response_serializer=inventory__pb2.ProductsResponse.SerializeToString,
            ),
            'SearchProductByID': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchProductByID,
                    request_deserializer=inventory__pb2.Payload.FromString,
                    response_serializer=inventory__pb2.ProductResponse.SerializeToString,
            ),
            'AddProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProduct,
                    request_deserializer=inventory__pb2.ProductRequest.FromString,
                    response_serializer=inventory__pb2.ProductResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=inventory__pb2.ProductRequest.FromString,
                    response_serializer=inventory__pb2.ProductResponse.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=inventory__pb2.Payload.FromString,
                    response_serializer=inventory__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'InventoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchAllProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/SearchAllProducts',
            inventory__pb2.Empty.SerializeToString,
            inventory__pb2.ProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchProductByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/SearchProductByID',
            inventory__pb2.Payload.SerializeToString,
            inventory__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/AddProduct',
            inventory__pb2.ProductRequest.SerializeToString,
            inventory__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/UpdateProduct',
            inventory__pb2.ProductRequest.SerializeToString,
            inventory__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/DeleteProduct',
            inventory__pb2.Payload.SerializeToString,
            inventory__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
